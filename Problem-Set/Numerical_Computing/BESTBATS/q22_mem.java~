import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) throws Exception {
        InputReader in = new InputReader(System.in);
        PrintWriter out = new PrintWriter(System.out);

        TopBatsmen solver = new TopBatsmen();
        int testCases = in.readInt();
        for (int i = 1; i <= testCases; ++i)
            solver.solve(in, out);

        out.close();
    }
}

class TopBatsmen {
    public void solve(InputReader in, PrintWriter out) {
        int numberOfBatsMen = 11;
        int maxScore = 101;
        int[] countScore = new int[maxScore];
        for (int i = 0; i < numberOfBatsMen; ++i)
            countScore[in.readInt()]++;
        int k = in.readInt();

        int options = 0;
        int select = 0;
        int chosen = 0;
        for (int score = maxScore - 1; score >= 0; --score) {
            if (chosen + countScore[score] >= k) {
                options = countScore[score];
                select = k - chosen;
                break;
            }
            chosen += countScore[score];
        }
        long res = 1;
        for (int i = 0; i < select; ++i) {
            res *= options - i;
            res /= i + 1;
        }

        out.println(res);
    }
}

class InputReader {

    private InputStream stream;
    private byte[] buf = new byte[1024];
    private int curChar;
    private int numChars;

    public InputReader(InputStream stream) {
        this.stream = stream;
    }

    public int read() {
        if (numChars == -1)
            throw new InputMismatchException();
        if (curChar >= numChars) {
            curChar = 0;
            try {
                numChars = stream.read(buf);
            } catch (IOException e) {
                throw new InputMismatchException();
            }
            if (numChars <= 0)
                return -1;
        }
        return buf[curChar++];
    }

    public int readInt() {
        int c = read();
        while (isSpaceChar(c))
            c = read();
        int sgn = 1;
        if (c == '-') {
            sgn = -1;
            c = read();
        }
        int res = 0;
        do {
            if (c < '0' || c > '9')
                throw new InputMismatchException();
            res *= 10;
            res += c - '0';
            c = read();
        } while (!isSpaceChar(c));
        return res * sgn;
    }

    public String readString() {
        int c = read();
        while (isSpaceChar(c))
            c = read();
        StringBuffer res = new StringBuffer();
        do {
            res.appendCodePoint(c);
            c = read();
        } while (!isSpaceChar(c));
        return res.toString();
    }

    public static boolean isSpaceChar(int c) {
        return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;
    }
}